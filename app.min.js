const fs=require('fs'),path=require('path'),{clipboard,remote,shell,ipcRenderer}=require('electron'),{EventEmitter}=require('events'),{app,dialog}=remote,res=require('./appResource'),ver='180',_cfn=path.join(app.getPath('userData'),'.config'+ver+'.json'),_bfp=app.getPath('appData');let broker={},debug=console.log.bind(console);Object.setPrototypeOf(broker,EventEmitter.prototype);function failed(a){return{status:'failed',message:a}}function cancel(){return{status:'cancelled'}}broker.getFileInfo=function(a){let b=path.parse(a);return{dir:b.dir,fileName:b.base,name:b.name,ext:b.ext.substr(1)}},broker.joinPath=function(a){return Array.isArray(a)?path.join.apply(null,a):a};function getFilters(a){return a.map(function(c){let d=c.split('('),f=d[0].trim(),g=d[1].trim().replace(')',''),h=g.split(' ').map((i)=>i.replace('*.',''));return{name:f,extensions:h}})}broker.getFileUrl=function(a){const b=new URL(`file:///${a}`);return b.href},broker.showSaveDialog=function(a){let b=a.title||app.name(),c=a.dirName||'',d=getFilters(a.nameFilters),g=dialog.showSaveDialogSync(app.mainWindow,{filters:d,defaultPath:c,title:b});return g?{status:'success',fileName:g}:cancel()},broker.showOpenDialog=function(a,b){let c=a.title||app.name(),d=a.dirName||'',f=getFilters(a.nameFilters),h=dialog.showOpenDialogSync(app.mainWindow,{filters:f,defaultPath:d,title:c,properties:['openFile']});return h?void b({status:'success',fileName:h[0]}):cancel()},broker.getBase64=function(a){try{let b=fs.readFileSync(a);return b.toString('base64')}catch(b){debug(`getBase64 exception: ${b.toString()}`)}};function saveFileSync(a,b,c){try{return fs.writeFileSync(a,b,c),{status:'success'}}catch(d){return debug(`save exception: ${d.toString()}`),failed(res.saveFileError+d)}}broker.save=function(a,b,c){return c&&(b='let '+function(f){let g=path.parse(f).name;return /^[_a-zA-Z\$]{1}[_a-zA-Z0-9\$]*$/.test(g)?g:'_'+g.replace(/[ \.]/g,'_')}(a)+' = '+b+';'),saveFileSync(a,b)},broker.open=function(a){if(!fs.existsSync(a))return failed(res.fileNotExist);try{let c=fs.readFileSync(a,'utf8'),d=c[0],g='\uFEFF'===d?c.substr(1):c;return{status:'success',fileName:a,data:g}}catch(c){return debug(`open exception: ${c.toString()}`),failed(res.openFileError+c)}},broker.exportFile=function(a,b,c){let d=b.exportFileType;if('csv'===d){let f=b.spread,g=saveFileSync(a,f,b.csv.encoding);debug(`export done w/ ${JSON.stringify(f)}`),c&&c(g)}else if('pdf'===d){let f=b.spread;f.savePDF(function(g){let h=new FileReader;h.onload=function(){let i=new Buffer(h.result),j=saveFileSync(a,i);c&&c(j)},h.readAsArrayBuffer(g)},function(g){debug(`export failed: ${g}`)},b.pdf.setting,b.pdf.sheetIndex)}else if('sjs'===d){let f=b.spread;f.save((g)=>{let h=new FileReader;h.onload=function(){let i=new Buffer(h.result),j=saveFileSync(a,i);c&&c(j)},h.readAsArrayBuffer(g)},(g)=>{debug(`export failed: ${g}`)},b.sjs&&b.sjs.setting)}else{let f=b.needStringify;if(!f){let g=b.spread;g.export((h)=>{let i=new FileReader;i.onload=function(){let j=new Buffer(i.result),k=saveFileSync(a,j);c&&c(k)},i.readAsArrayBuffer(h)},(h)=>{debug(`export failed: ${h}`)},b.sjsExcel&&b.sjsExcel.setting)}else{let g=b.spread,h={useArrayBuffer:!0};h.password=b.excel&&b.excel.password;let i=new GC.Spread.Excel.IO;i.save(g,function(j){let k=Buffer.from(j),l=saveFileSync(a,k);debug(`export done w/ ${JSON.stringify(l)}`),c&&c(l)},function(j){debug(`export failed: ${j}`)},h)}}};function doImport(a,b,c,d){if(!fs.existsSync(a))return void(d&&d(failed(res.fileNotExist)));let f;try{f=fs.readFileSync(a)}catch(g){d&&d(failed(res.importError+g)),debug(g)}if(b&&b.useExcelSJSFormat){let g=new Blob([f],{type:'application/vnd.ms-excel'});d&&d({status:'success',data:g})}else{let g=new GC.Spread.Excel.IO;g.open(f.buffer,function(h){d&&d({status:'success',data:h})},function(h){d&&d({status:'failed',errorData:h})},b&&b.importExcelSetting)}}broker.importExcel=function(a,b,c){doImport(a,b,['ExcelOpenFlags','excelOpenFlags','Password','password'],c)},broker.importCsv=function(a,b,c){try{let d=fs.readFileSync(a,b.encoding);c&&c({status:'success',data:d})}catch(d){c&&c(failed(res.importError+d))}},broker.openSJS=function(a,b,c){try{let d=fs.readFileSync(a),f=new Blob([d],{type:'application/x-zip-compressed'});c&&c({status:'success',data:f})}catch(d){c&&c(failed(res.importError+d))}};function notify(a){this.emit('javascriptNotify',a)}broker.getConfig=function(){return fs.existsSync(_cfn)?fs.readFileSync(_cfn,'utf8'):''},broker.setConfig=function(a){saveFile(_cfn,a)};function saveFile(a,b){fs.writeFileSync(a,b,'utf8',(c)=>{c?debug(`Save file error: ${c}`):debug(`${a} was updated.`)})}broker.getClipboardText=function(){return clipboard.readText()},broker.setClipboardText=function(a){clipboard.writeText(a)},broker.getClipboardHTML=function(){return clipboard.readHTML()},broker.setClipboardHTML=function(a){clipboard.writeHTML(a)},broker.setClipboardData=function(a){clipboard.write(a)},broker.exit=function(){app.exit(0)},broker.restart=function(){let a=process.platform;if(-1===['win32','darwin'].indexOf(a)){let b=process.env,c=b.APPIMAGE;if(c){electron.remote.BrowserWindow.getAllWindows()[0].hide();let d=require('child_process').spawn(c,[],{detached:!0});return d.unref(),void setTimeout(()=>app.quit(),3e3)}}app.relaunch(),app.quit()},broker.closeAllWindows=function(){app.exit(0)};function _gn(){return path.join(_bfp,'.sjs'+ver+'.bin')}broker._g=function(){let a=_gn();if(fs.existsSync(a)){let b=fs.readFileSync(a);return Buffer.from(b.toString(),'hex').toString()}return''},broker._u=function(a,b){let c=_gn(a);b=Buffer.from(b).toString('hex'),saveFile(c,b)},broker.active=function(){return 0},broker.getSystemFonts=function(){return app.systemFonts},window.open=function(a){shell.openExternal(a)},global.gc_native_app=broker,global.ipcRenderer=ipcRenderer;
